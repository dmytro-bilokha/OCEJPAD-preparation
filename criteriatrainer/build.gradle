//noinspection GroovyAssignabilityCheck

plugins {
  id 'at.comm_unity.gradle.plugins.jpamodelgen' version '1.1.1'
}

apply plugin: 'java'
apply plugin: 'at.comm_unity.gradle.plugins.jpamodelgen'

version = '0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    itestCompile.extendsFrom testCompile
    itestRuntime.extendsFrom testRuntime
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'com.h2database:h2:1.4.192'
    compile 'org.hibernate:hibernate-entitymanager:5.2.3.Final'
}

sourceSets {
    itest {
        java {
            compileClasspath += main.output //+ test.output
            runtimeClasspath += main.output // + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
    generated {
        java.srcDir "${buildDir}/generated/src/java/"
    }
}

compileJava.options.compilerArgs += ["-proc:none"]

jpaModelgen {
  library = "org.hibernate:hibernate-jpamodelgen:5.2.3.Final"
  jpaModelgenSourcesDir = "src/generated/java"
}

//Task to create Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Criteria Trainer',
        	'Implementation-Version': version,
        	'Main-Class': 'bilokhado.criteriatrainer.CriteriaTrainer'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task itest(type: Test) {
    description = 'Runs the integration tests'
    group = 'verification'
    testClassesDir = sourceSets.itest.output.classesDir
    classpath = sourceSets.itest.runtimeClasspath
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

